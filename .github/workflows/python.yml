name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out code
    - name: Check out code
      uses: actions/checkout@v2

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    # Install dependencies with pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Set environment variables for tests
    - name: Set environment variables
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> .env
        echo "MODEL=gpt-3.5-turbo" >> .env
        echo "MAX_TOKENS=2048" >> .env
        echo "TEMPERATURE=0.7" >> .env
        echo "NUMBER_OF_VECTORIAL_RESULTS=5" >> .env
        echo "DB_NAME=rag_db" >> .env

    # Install Docker and Docker Compose
    - name: Remove conflicting packages
      run: |
        sudo apt-get remove -y docker docker-engine docker.io containerd runc

    - name: Update package list
      run: sudo apt-get update

    - name: Install Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # Start Docker services
    - name: Start Docker services
      run: docker-compose up -d

    # Run tests with pytest
    - name: Run tests
      run: |
        pytest --cov=app --cov-report=xml

    # Upload coverage report to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        flags: smart-tests
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
